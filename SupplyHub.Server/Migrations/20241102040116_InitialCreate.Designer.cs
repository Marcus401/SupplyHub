// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupplyHub.Server.Data;

#nullable disable

namespace SupplyHub.Server.Migrations
{
    [DbContext(typeof(SupplyhubDatabaseContext))]
    [Migration("20241102040116_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SupplyHub.Server.Models.Advertisement", b =>
                {
                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int")
                        .HasColumnName("AdvertisementID");

                    b.Property<byte[]>("AdvertisementFile")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("AdvertisementId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.Chat", b =>
                {
                    b.Property<int>("ConversationId")
                        .HasColumnType("int")
                        .HasColumnName("ConversationID");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasIndex("ConversationId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.ChatProfile", b =>
                {
                    b.Property<int>("ConversationId")
                        .HasColumnType("int")
                        .HasColumnName("ConversationID");

                    b.Property<int>("ChatUserId")
                        .HasColumnType("int")
                        .HasColumnName("ChatUserID");

                    b.HasKey("ConversationId");

                    b.HasIndex("ChatUserId");

                    b.ToTable("ChatProfiles");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .HasColumnType("int")
                        .HasColumnName("MessageID");

                    b.Property<int?>("ChatUserId")
                        .HasColumnType("int")
                        .HasColumnName("ChatUserID");

                    b.Property<int?>("ConversationId")
                        .HasColumnType("int")
                        .HasColumnName("ConversationID");

                    b.Property<string>("Text")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("MessageId");

                    b.HasIndex("ChatUserId");

                    b.HasIndex("ConversationId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Faq")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("FAQ");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("StockAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Timeframe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.SellerProfile", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("Bio")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("BusinessType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ChatUserId")
                        .HasColumnType("int")
                        .HasColumnName("ChatUserID");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ContactNumber")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("image");

                    b.Property<int?>("Products")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Socials")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CompanyId");

                    b.HasIndex("ChatUserId");

                    b.HasIndex("Products");

                    b.ToTable("SellerProfiles");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.UserChatId", b =>
                {
                    b.Property<int>("ChatUserId")
                        .HasColumnType("int")
                        .HasColumnName("ChatUserID");

                    b.Property<bool>("IsSeller")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.HasKey("ChatUserId")
                        .HasName("PK__UserChat__BFA9F770C6B226BC");

                    b.ToTable("UserChatIDs");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int?>("AffiliatedCompany")
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("ChatUserId")
                        .HasColumnType("int")
                        .HasColumnName("ChatUserID");

                    b.Property<int?>("ContactNumber")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varbinary(50)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("image");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK_UserProfile");

                    b.HasIndex("AffiliatedCompany");

                    b.HasIndex("ChatUserId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.Advertisement", b =>
                {
                    b.HasOne("SupplyHub.Server.Models.SellerProfile", "Company")
                        .WithMany("Advertisements")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK_Advertisements_SellerProfiles");

                    b.HasOne("SupplyHub.Server.Models.Product", "Product")
                        .WithMany("Advertisements")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Advertisements_Products");

                    b.Navigation("Company");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.Chat", b =>
                {
                    b.HasOne("SupplyHub.Server.Models.ChatProfile", "Conversation")
                        .WithMany()
                        .HasForeignKey("ConversationId")
                        .IsRequired()
                        .HasConstraintName("FK_Chats_ChatProfiles");

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.ChatProfile", b =>
                {
                    b.HasOne("SupplyHub.Server.Models.UserChatId", "ChatUser")
                        .WithMany("ChatProfiles")
                        .HasForeignKey("ChatUserId")
                        .IsRequired()
                        .HasConstraintName("FK_ChatProfiles_UserChatIDs");

                    b.Navigation("ChatUser");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.Message", b =>
                {
                    b.HasOne("SupplyHub.Server.Models.UserChatId", "ChatUser")
                        .WithMany("Messages")
                        .HasForeignKey("ChatUserId")
                        .HasConstraintName("FK_Messages_UserChatIDs");

                    b.HasOne("SupplyHub.Server.Models.ChatProfile", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .HasConstraintName("FK_Messages_ChatProfiles");

                    b.Navigation("ChatUser");

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.SellerProfile", b =>
                {
                    b.HasOne("SupplyHub.Server.Models.UserChatId", "ChatUser")
                        .WithMany("SellerProfiles")
                        .HasForeignKey("ChatUserId")
                        .IsRequired()
                        .HasConstraintName("FK_SellerProfiles_UserChatIDs");

                    b.HasOne("SupplyHub.Server.Models.Product", "ProductsNavigation")
                        .WithMany("SellerProfiles")
                        .HasForeignKey("Products")
                        .HasConstraintName("FK_SellerProfiles_Products");

                    b.Navigation("ChatUser");

                    b.Navigation("ProductsNavigation");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.UserProfile", b =>
                {
                    b.HasOne("SupplyHub.Server.Models.SellerProfile", "AffiliatedCompanyNavigation")
                        .WithMany("UserProfiles")
                        .HasForeignKey("AffiliatedCompany")
                        .HasConstraintName("FK_UserProfiles_SellerProfiles");

                    b.HasOne("SupplyHub.Server.Models.UserChatId", "ChatUser")
                        .WithMany("UserProfiles")
                        .HasForeignKey("ChatUserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserProfiles_UserChatIDs");

                    b.Navigation("AffiliatedCompanyNavigation");

                    b.Navigation("ChatUser");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.ChatProfile", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.Product", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("SellerProfiles");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.SellerProfile", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("SupplyHub.Server.Models.UserChatId", b =>
                {
                    b.Navigation("ChatProfiles");

                    b.Navigation("Messages");

                    b.Navigation("SellerProfiles");

                    b.Navigation("UserProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
